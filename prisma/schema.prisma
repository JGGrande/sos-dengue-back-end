generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "postgresqlExtensions", "prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(255)
  cpf              String            @db.VarChar(11)
  email            String            @db.VarChar(255)
  photo            String            @db.VarChar(255)
  role             String            @db.VarChar(255)
  password         String            @db.VarChar(255)
  createdAt        DateTime          @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt        DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()
  deletedAt        DateTime?         @map("deleted_at") @db.Timestamptz()
  UserRefreshToken UserRefreshToken?

  @@map("user")
}

model UserRefreshToken {
  id        Int      @id @default(autoincrement())
  expiresIn DateTime @map("expires_in") @db.Timestamptz()
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique @map("user_id")
  token     String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()

  @@map("user_refresh_token")
}

model Residence {
  id              Int     @id @default(autoincrement())
  type            String  @db.VarChar(255)
  cep             String  @db.VarChar(8)
  lat             Decimal @db.Decimal(10, 7)
  lng             Decimal @db.Decimal(10, 7)
  street          String  @db.VarChar(255)
  number          String? @db.VarChar(255)
  neighborhood    String  @db.VarChar(255)
  streetCourt     String? @map("street_court") @db.VarChar(255)
  block           String? @db.VarChar(255)
  complement      String? @db.VarChar(255)
  apartmentNumber String? @map("apartment_number") @db.VarChar(255)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  @@map("residence")
}
